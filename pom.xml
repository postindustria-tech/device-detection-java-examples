<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ This Original Work is copyright of 51 Degrees Mobile Experts Limited.
  ~ Copyright 2022 51 Degrees Mobile Experts Limited, Davidson House,
  ~ Forbury Square, Reading, Berkshire, United Kingdom RG1 3EU.
  ~
  ~ This Original Work is licensed under the European Union Public Licence
  ~  (EUPL) v.1.2 and is subject to its terms as set out below.
  ~
  ~  If a copy of the EUPL was not distributed with this file, You can obtain
  ~  one at https://opensource.org/licenses/EUPL-1.2.
  ~
  ~  The 'Compatible Licences' set out in the Appendix to the EUPL (as may be
  ~  amended by the European Commission) shall be deemed incompatible for
  ~  the purposes of the Work and the provisions of the compatibility
  ~  clause in Article 5 of the EUPL shall not apply.
  ~
  ~   If using the Work as, or as part of, a network application, by
  ~   including the attribution notice(s) required under Article 5 of the EUPL
  ~   in the end user terms of the application under an appropriate heading,
  ~   such notice(s) shall fulfill the requirements of that article.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.51degrees</groupId>
    <artifactId>device-detection-java-examples</artifactId>
    <version>4.4.20</version>
    <packaging>pom</packaging>

    <name>51Degrees :: Device Detection :: Examples</name>
    <url>https://51degrees.com</url>
    <description>Device detection examples</description>

    <modules>
        <module>web</module>
        <module>console</module>
        <module>shared</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>

        <junit.version>4.13.2</junit.version>
        <maven.deploy.skip>true</maven.deploy.skip>
        <snakeyaml.version>1.30</snakeyaml.version>
        <device-detection.version>4.4.63</device-detection.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>

        <ossrh.baseurl>https://oss.sonatype.org</ossrh.baseurl>
        <snapshot-repository.id>ossrh</snapshot-repository.id>
        <snapshot-repository.url>${ossrh.baseurl}/content/repositories/snapshots/</snapshot-repository.url>

        <fetchrepository.id>central</fetchrepository.id>
        <fetchrepository.url>https://repo1.maven.org/maven2</fetchrepository.url>

        <slf4j-api.version>2.0.9</slf4j-api.version>
        <logback-classic.version>1.3.12</logback-classic.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.51degrees</groupId>
                <artifactId>device-detection</artifactId>
                <version>${device-detection.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito-core.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-api.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback-classic.version}</version>
                <scope>runtime</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>${fetchrepository.id}</id>
            <url>${fetchrepository.url}</url>
            <releases>
                <enabled>true</enabled>
                 </releases>
             <snapshots>
            <enabled>false</enabled>
              </snapshots>
        </repository>
        <repository>
                <id>${snapshot-repository.id}</id>
                <url>${snapshot-repository.url}</url>
                <releases>
            <enabled>false</enabled>
                </releases>
                <snapshots>
            <enabled>true</enabled>
                </snapshots>
        </repository>
    </repositories>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <useSystemClassLoader>false</useSystemClassLoader>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <systemPropertyVariables>
                        <!-- this tells all tests run via surefire to pick their logback config up from the root -->
                        <!-- fwiw does not affect those run via main() which need to find their config by other means -->
                        <!--suppress UnresolvedMavenProperty -->
                        <logback.configurationFile>${maven.multiModuleProjectDirectory}/logback.xml</logback.configurationFile>
                        <!-- this sets the scope of file search (inter alia in getFilePath) to the project directory-->
                        <!--suppress UnresolvedMavenProperty -->
                        <project.root>${maven.multiModuleProjectDirectory}</project.root>
                        <!-- cloud resource key for running tests - this can be defined in  settings.xml -->
                        <TestResourceKey>${TestResourceKey}</TestResourceKey>
                        <!-- special resource key with license for running TAC and Native Model examples
                             - can be defined in settings.xml-->
                        <SuperResourceKey>${SuperResourceKey}</SuperResourceKey>
                        <!-- license key required for running UpdateDataFile example -->
                        <LicenseKey>${LicenseKey}</LicenseKey>
                    </systemPropertyVariables>
                    <properties>
                        <property>
                            <name>listener</name>
                            <value>fiftyone.devicedetection.shared.testhelpers.MavenRunListener</value>
                        </property>
                    </properties>
                </configuration>
            </plugin>

        </plugins>
    </build>
</project>
